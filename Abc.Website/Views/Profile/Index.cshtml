@using Abc.Website;
@using Abc.Configuration;
@model Abc.Website.Models.UserPublicProfile
@{
  Layout = null;
  string fullLine = Model.Tweets == null || string.IsNullOrWhiteSpace(Model.GitHubHandle) ? " full line" : string.Empty;
}
<!DOCTYPE html>
<!--[if lt IE 7]> <html lang="en-us" class="no-js ie6"> <![endif]-->
<!--[if IE 7]>    <html lang="en-us" class="no-js ie7"> <![endif]-->
<!--[if IE 8]>    <html lang="en-us" class="no-js ie8"> <![endif]-->
<!--[if gt IE 8]><!-->
<html lang="en-us" class="no-js">
<!--<![endif]-->
<head>
  <meta charset="utf-8" />
  <title>@Model.UserName | CodeStorm.In - DevOps Social Platform | ABC Solutions Ltd.
  </title>
  <meta name="keywords" content="ABC, Cloud Computing, Windows Azure, Microsoft Cloud, DevOps, Software, Engineer, Amazing Insights">
  <meta name="description" content="Agile Business Solutions provides real-time analytics for cloud-based applications on Windows Azure">
  <meta name="author" content="Agile Business Cloud Solutions Ltd.">
  <meta property="og:image" content="//www.gravatar.com/avatar/@Model.Gravatar?s=100" />
  <meta property="og:type" content="Profile" />
  <meta property="og:title" content="@Model.UserName | We Are ABC" />
  <meta property="og:url" content="@Request.Url" />
  <meta property="og:site_name" content="ABC" />
  <meta property="og:description" content="Join The Social DevOps Movement!" />
  @Html.Partial("_Css")
  <script src="//ajax.aspnetcdn.com/ajax/jQuery/jquery-1.8.2.min.js"></script>
  <script src="//cdnjs.cloudflare.com/ajax/libs/modernizr/2.6.1/modernizr.min.js"></script>
  <script>
        var ABC = { FederationTLD: "@Settings.Instance["FederationTLD"]"};
        var ContentDeliveryNetworkScriptsURL = "@Url.ContentCdn("~/scripts/")";
        var BlobScriptsURL = "@Url.ContentBlob("~/scripts/")";
  </script>
  @Html.Partial("_GoogleTracking")
</head>
<body>
  <div id="toolbar-wrapper">
    <div id="toolbar">
      <h2 class="branding"><a href="/" title="Agile Business Cloud Solutions Ltd.">Agile
        Business Cloud Solutions Ltd.</a></h2>
      @Html.Partial("_MainMenu")
    </div>
    <br /><br />
    <div id="wrapper">
      <div id="widgets" class="clearfix" />
      <div id="wrapper-content">
        @if (!User.Identity.IsAuthenticated)
        {
          <div style="z-indezx: 1; float: right;">
            <a href="/Account/LogOn" class="button-normal light-green">Join Now</a></div>
        }
        <div id="content">
          <div class="section profile-user">
            <h1 class="custom-widgets-title no-topad">@Model.UserName</h1>
            <div class="large main">
              <table class="table-simple">
                <tr>
                  <td rowspan="7">
                    <img src="//www.gravatar.com/avatar/@Model.Gravatar?s=240" title="@Model.UserName's Profile Picture" alt="@Model.UserName's Profile Picture" />
                  </td>
                </tr>
                <tr>
                  <td>
                    @if (!string.IsNullOrWhiteSpace(Model.TwitterHandle))
                    {
                      <div class="line btn-follow-us">
                        <a href="https://twitter.com/@Model.TwitterHandle" class="twitter-follow-button" data-show-count="false">
                          Follow @@@Model.TwitterHandle</a>
                      </div>
                    }
                  </td>
                </tr>
                <tr>
                  <td><span class='st_facebook_hcount' st_url="@Request.Url.GetLeftPart(UriPartial.Path)" displayText='Facebook' />
                  </td>
                </tr>
                <tr>
                  <td><span class='st_fblike_hcount' st_url="@Request.Url.GetLeftPart(UriPartial.Path)" displayText='Facebook Like' />
                  </td>
                </tr>
                <tr>
                  <td>
                    @if (string.IsNullOrWhiteSpace(Model.TwitterHandle))
                    {
                      string tweet = string.Format("{0} #DevOps Profile Page, @WeAreABC. Join the movement today.", Model.UserName);
                      <span class='st_twitter_hcount' st_url="@Request.Url.GetLeftPart(UriPartial.Path)" displayText='Tweet' st_title="@tweet" />
                    }
                    else
                    {
                      string tweet = string.Format("@{0} #DevOps Profile Page, @WeAreABC. Join the movement today.", Model.TwitterHandle);
                      <span class='st_twitter_hcount' st_url="@Request.Url.GetLeftPart(UriPartial.Path)" displayText='Tweet' st_title="@tweet" />
                    }
                  </td>
                </tr>
                <tr>
                  <td><span class='st_linkedin_hcount' st_url="@Request.Url.GetLeftPart(UriPartial.Path)" displayText='LinkedIn'/>
                  </td>
                </tr>
                <tr>
                  <td></td>
                </tr>
              </table>
            </div>
            <div class="large">
              <div class="unit size1of3">
                <em>Applications</em></div>
              <div class="unit size2of3">@Model.ApplicationsUsed/@Model.ApplicationsMaximum</div>
              <div class="unit size1of3">
                <em>Member Since</em></div>
              <div class="unit size2of3">@Model.CreatedOn.ToString("MMMM dd, yyyy")</div>
              <div class="unit size1of3">
                <em>Time Zone</em></div>
              <div class="unit size2of3">@Model.TimeZone.StandardName</div>
              @if (!string.IsNullOrWhiteSpace(Model.City))
              {
                <div class="unit size1of3">
                  <em>City</em></div>
                <div class="unit size2of3">@Model.City</div>
              }
              @if (!string.IsNullOrWhiteSpace(Model.Country))
              {
                <div class="unit size1of3">
                  <em>Country</em></div>
                <div class="unit size2of3">@Model.Country</div>
              }
              <div class="unit size1of3">
                <em>Permalink</em></div>
              <div class="unit size2of3">
                <a href="@Request.Url">@Request.Url</a></div>
              @if (!string.IsNullOrWhiteSpace(Model.Country) || !string.IsNullOrWhiteSpace(Model.City))
              {
                <div id='profileMap' style="position: absolute; top: 245px;">
                </div>
                <div id="output" style="display: none;">
                </div>
              }
            </div>
          </div>
          <div class="section">
            @if (null != Model.Tweets)
            {
              <div class="large @fullLine">
                <h2 class="custom-widgets-title no-topad">Recent Tweets</h2>
                <table class="simple">
                  @foreach (var tweet in Model.Tweets)
                  {
                    <tr>
                      <td>
                        <p>@Html.Raw(@tweet.Render()) | <span class="date">@tweet.CreatedAt.Relative()</span></p>
                      </td>
                    </tr>
                  }
                </table>
              </div>
            }
            @if (!string.IsNullOrWhiteSpace(Model.GitHubHandle))
            {
              <div class="large @fullLine">
                <div class="section section-github-activities component">
                  <div class="UIBlock">
                  </div>
                  <h2 class="custom-widgets-title no-topad">Github Activity</h2>
                  <ul class="github-activity-list component" modelsource="abc.profile.GithubActivities">
                    {{#GithubActivities}}
                    <li class="line">
                      <div class="unit picture">
                        <img src="//gravatar.com/avatar/{{TargetPicture}}?s=40" />
                      </div>
                      <div class="unit info" style="margin-left: 5px">
                        <div class="gutter">
                          {{{Message}}} <span class="date">{{DateRelative}}</span>
                        </div>
                      </div>
                    </li>
                    {{/GithubActivities}} {{^GithubActivities}}
                    <li>Aw snap, looks like you don't have a Github handle! Add it to your profile and
                      we can easily pull in your public activity on Github.</li>
                    {{/GithubActivities}}
                  </ul>
                </div>
              </div>
              <input name="GitHubHandle" value="@Model.GitHubHandle" type="hidden" />
            }
          </div>
        </div>
      </div>
    </div>
  </div>
  <script src="@Url.ContentBlob("~/scripts/dist/plugins.js")"></script>
  <script src="@Url.Content("~/scripts/abc/helper/AggregateGraph.js")"></script>
  <script src="@Url.Content("~/scripts/abc/helper/AuthenticationHelper.js")"></script>
  <script src="@Url.ContentCdn("~/scripts/custom-revivas.js")"></script>
  <script src="@Url.ContentCdn("~/scripts/dist/mojo.js")"></script>
  <script src="@Url.ContentBlob("~/scripts/abc/app.js")"></script>
  @if (!string.IsNullOrWhiteSpace(Model.Country) || !string.IsNullOrWhiteSpace(Model.City))
  {
    <script src="//ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0"></script>
    <script>
      var map = null;
      var query;
      function getMap() {
        map = new Microsoft.Maps.Map(document.getElementById('profileMap'), { credentials: 'AjuT4PLg-L8nYZuKP2iGskLpM0XoDUggp-bWZXhSycF2qd6CTYEJVn-wLMcpVVaK', showDashboard: false, enableSearchLogo: false, showScalebar: false });
        map.setOptions({ height: 150, width: 450 })
        findLocation();
      }

      function findLocation() {
        query = '@Model.City, @Model.Country';
        map.getCredentials(callSearchService);
      }

      function callSearchService(credentials) {
        var searchRequest = '//dev.virtualearth.net/REST/v1/Locations/' + query + '?output=json&jsonp=searchServiceCallback&key=' + credentials;
        var mapscript = document.createElement('script');
        mapscript.type = 'text/javascript';
        mapscript.src = searchRequest;
        document.getElementById('profileMap').appendChild(mapscript)
      }

      function searchServiceCallback(result) {
        var output = document.getElementById("output");
        if (output) {
          while (output.hasChildNodes()) {
            output.removeChild(output.lastChild);
          }
        }

        if (result &&
                  result.resourceSets &&
                  result.resourceSets.length > 0 &&
                  result.resourceSets[0].resources &&
                  result.resourceSets[0].resources.length > 0) {
          var bbox = result.resourceSets[0].resources[0].bbox;
          var viewBoundaries = Microsoft.Maps.LocationRect.fromLocations(new Microsoft.Maps.Location(bbox[0], bbox[1]), new Microsoft.Maps.Location(bbox[2], bbox[3]));
          map.setView({ bounds: viewBoundaries });
          var location = new Microsoft.Maps.Location(result.resourceSets[0].resources[0].point.coordinates[0], result.resourceSets[0].resources[0].point.coordinates[1]);
        }
      }

      getMap();
    </script>
  }
  <script src="//w.sharethis.com/button/buttons.js"></script>
  <script>
    stLight.options({ publisher: "ur-7b6dbc9a-758a-c3e2-94f8-89afe317159" });
  </script>
  <script>
    !function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = "//platform.twitter.com/widgets.js"; fjs.parentNode.insertBefore(js, fjs); } } (document, "script", "twitter-wjs");
  </script>
</body>
</html>
